// Generated by CoffeeScript 1.9.2
define(['jasmine', 'publisher'], function(jasmine, Publisher) {
  "use strict";
  describe("Test the on trigger methods => ", function() {
    it("On add() and update() subscribers, trigger and check returns", function() {
      var o, publisher;
      o = {
        aprop: 'aprop',
        bprop: 'bprop',
        cprop: function(param) {
          return param;
        },
        dprop: 'dprop',
        eprop: function(param) {
          return param;
        }
      };
      publisher = new Publisher(o);
      publisher.on('add', function(param) {
        console.log('add published');
        return param;
      });
      publisher.on('update', function() {
        console.log('update published');
        return 'update';
      });
      expect(publisher.trigger('add', 'add')).toEqual('add');
      expect(publisher.trigger('update')).toEqual('update');
    });
    it("Trigger without subscriber name (context nor params) and check if the array of subscribers was returned.", function() {
      var func, o, publisher;
      o = {
        name: 'Bogdan',
        surname: 'Volosincu',
        language: 'CoffeeScript'
      };
      publisher = new Publisher(o);
      publisher.on('add', function(param) {
        console.log('add published');
        return param;
      });
      publisher.on('update', function() {
        console.log('update published');
        return 'update';
      });
      func = typeof publisher.trigger()['add'];
      expect(func).toEqual('function');
      expect(publisher.trigger()['add']('add')).toEqual('add');
      expect(typeof []).toEqual(typeof publisher.trigger());
    });
  });
});
