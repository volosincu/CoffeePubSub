// Generated by CoffeeScript 1.7.1
define(['jasmine', 'proto'], function(jasmine, Proto) {
  "use strict";
  describe("Test the on trigger methods => ", function() {
    it("On add() and update() subscribers, trigger and check returns", function() {
      var o, proto;
      o = {
        aprop: 'aprop',
        bprop: 'bprop',
        cprop: function(param) {
          return param;
        },
        dprop: 'dprop',
        eprop: function(param) {
          return param;
        }
      };
      proto = new Proto(o);
      proto.on('add', function(param) {
        console.log('add published');
        return param;
      });
      proto.on('update', function() {
        console.log('update published');
        return 'update';
      });
      expect(proto.trigger('add', 'add')).toEqual('add');
      expect(proto.trigger('update')).toEqual('update');
    });
    it("Trigger without subscriber name (context nor params) and check if the array of subscribers was returned.", function() {
      var func, o, proto;
      o = {
        name: 'Bogdan',
        surname: 'Volosincu',
        language: 'CoffeeScript'
      };
      proto = new Proto(o);
      proto.on('add', function(param) {
        console.log('add published');
        return param;
      });
      proto.on('update', function() {
        console.log('update published');
        return 'update';
      });
      func = typeof proto.trigger()['add'];
      expect(func).toEqual('function');
      expect(proto.trigger()['add']('add')).toEqual('add');
      expect(typeof []).toEqual(typeof proto.trigger());
    });
  });
});
